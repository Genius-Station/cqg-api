// Messages for accounts that require separate authorization process

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: protos/WebAPI/account_authorization_2.proto

package WebAPI

import (
	common "cqg-api/protos/WebAPI/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccountLogonResult_ResultCode int32

const (
	// // success codes
	// User is logged in to the system. Account connection status becomes CONNECTED.
	AccountLogonResult_RESULT_CODE_SUCCESS AccountLogonResult_ResultCode = 0
	// Account password change required after the first logon of new account.
	// Account connection status remains CONNECTING.
	AccountLogonResult_RESULT_CODE_PASSWORD_CHANGE_REQUIRED AccountLogonResult_ResultCode = 1
	// Account password expired. Account connection status remains CONNECTING.
	AccountLogonResult_RESULT_CODE_PASSWORD_EXPIRED AccountLogonResult_ResultCode = 2
	// // failure codes (100+), account connection status is reset to DISCONNECTED.
	// General failure.
	AccountLogonResult_RESULT_CODE_FAILURE AccountLogonResult_ResultCode = 101
)

// Enum value maps for AccountLogonResult_ResultCode.
var (
	AccountLogonResult_ResultCode_name = map[int32]string{
		0:   "RESULT_CODE_SUCCESS",
		1:   "RESULT_CODE_PASSWORD_CHANGE_REQUIRED",
		2:   "RESULT_CODE_PASSWORD_EXPIRED",
		101: "RESULT_CODE_FAILURE",
	}
	AccountLogonResult_ResultCode_value = map[string]int32{
		"RESULT_CODE_SUCCESS":                  0,
		"RESULT_CODE_PASSWORD_CHANGE_REQUIRED": 1,
		"RESULT_CODE_PASSWORD_EXPIRED":         2,
		"RESULT_CODE_FAILURE":                  101,
	}
)

func (x AccountLogonResult_ResultCode) Enum() *AccountLogonResult_ResultCode {
	p := new(AccountLogonResult_ResultCode)
	*p = x
	return p
}

func (x AccountLogonResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountLogonResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_WebAPI_account_authorization_2_proto_enumTypes[0].Descriptor()
}

func (AccountLogonResult_ResultCode) Type() protoreflect.EnumType {
	return &file_protos_WebAPI_account_authorization_2_proto_enumTypes[0]
}

func (x AccountLogonResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AccountLogonResult_ResultCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AccountLogonResult_ResultCode(num)
	return nil
}

// Deprecated: Use AccountLogonResult_ResultCode.Descriptor instead.
func (AccountLogonResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_protos_WebAPI_account_authorization_2_proto_rawDescGZIP(), []int{1, 0}
}

// Password change result.
type AccountPasswordChangeResult_ResultCode int32

const (
	// / success codes
	// User password is changed successfully.
	AccountPasswordChangeResult_RESULT_CODE_SUCCESS AccountPasswordChangeResult_ResultCode = 0
	// / failure codes (100+)
	// Most likely incorrect user name or password.
	AccountPasswordChangeResult_RESULT_CODE_FAILURE AccountPasswordChangeResult_ResultCode = 101
)

// Enum value maps for AccountPasswordChangeResult_ResultCode.
var (
	AccountPasswordChangeResult_ResultCode_name = map[int32]string{
		0:   "RESULT_CODE_SUCCESS",
		101: "RESULT_CODE_FAILURE",
	}
	AccountPasswordChangeResult_ResultCode_value = map[string]int32{
		"RESULT_CODE_SUCCESS": 0,
		"RESULT_CODE_FAILURE": 101,
	}
)

func (x AccountPasswordChangeResult_ResultCode) Enum() *AccountPasswordChangeResult_ResultCode {
	p := new(AccountPasswordChangeResult_ResultCode)
	*p = x
	return p
}

func (x AccountPasswordChangeResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountPasswordChangeResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_WebAPI_account_authorization_2_proto_enumTypes[1].Descriptor()
}

func (AccountPasswordChangeResult_ResultCode) Type() protoreflect.EnumType {
	return &file_protos_WebAPI_account_authorization_2_proto_enumTypes[1]
}

func (x AccountPasswordChangeResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AccountPasswordChangeResult_ResultCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AccountPasswordChangeResult_ResultCode(num)
	return nil
}

// Deprecated: Use AccountPasswordChangeResult_ResultCode.Descriptor instead.
func (AccountPasswordChangeResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_protos_WebAPI_account_authorization_2_proto_rawDescGZIP(), []int{3, 0}
}

// Logoff result.
type AccountLogoffResult_ResultCode int32

const (
	// / success codes
	// Logoff was successful.
	AccountLogoffResult_RESULT_CODE_SUCCESS AccountLogoffResult_ResultCode = 0
	// / failure codes (100+)
	// Logoff failed.
	AccountLogoffResult_RESULT_CODE_FAILURE AccountLogoffResult_ResultCode = 101
)

// Enum value maps for AccountLogoffResult_ResultCode.
var (
	AccountLogoffResult_ResultCode_name = map[int32]string{
		0:   "RESULT_CODE_SUCCESS",
		101: "RESULT_CODE_FAILURE",
	}
	AccountLogoffResult_ResultCode_value = map[string]int32{
		"RESULT_CODE_SUCCESS": 0,
		"RESULT_CODE_FAILURE": 101,
	}
)

func (x AccountLogoffResult_ResultCode) Enum() *AccountLogoffResult_ResultCode {
	p := new(AccountLogoffResult_ResultCode)
	*p = x
	return p
}

func (x AccountLogoffResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountLogoffResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_WebAPI_account_authorization_2_proto_enumTypes[2].Descriptor()
}

func (AccountLogoffResult_ResultCode) Type() protoreflect.EnumType {
	return &file_protos_WebAPI_account_authorization_2_proto_enumTypes[2]
}

func (x AccountLogoffResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AccountLogoffResult_ResultCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AccountLogoffResult_ResultCode(num)
	return nil
}

// Deprecated: Use AccountLogoffResult_ResultCode.Descriptor instead.
func (AccountLogoffResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_protos_WebAPI_account_authorization_2_proto_rawDescGZIP(), []int{5, 0}
}

// Account level Logon Request. One-step logon procedure.
// Note: it is deprecated. Use multi-step account logon procedure instead
// (see AccountLogonRoutineClient / AccountLogonRoutineServer).
type AccountLogon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account ID in CQG trade routing system.
	AccountId *int32 `protobuf:"zigzag32,1,req,name=account_id,json=accountId" json:"account_id,omitempty"`
	// User login name for this account.
	Username *string `protobuf:"bytes,2,req,name=username" json:"username,omitempty"`
	// User's password for this account.
	Password *string `protobuf:"bytes,3,req,name=password" json:"password,omitempty"`
}

func (x *AccountLogon) Reset() {
	*x = AccountLogon{}
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountLogon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLogon) ProtoMessage() {}

func (x *AccountLogon) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLogon.ProtoReflect.Descriptor instead.
func (*AccountLogon) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_account_authorization_2_proto_rawDescGZIP(), []int{0}
}

func (x *AccountLogon) GetAccountId() int32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *AccountLogon) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *AccountLogon) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

// Account level Logon result.
// Note: it is deprecated. Use multi-step account logon procedure instead
// (see AccountLogonRoutineClient / AccountLogonRoutineServer).
type AccountLogonResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account ID in CQG trade routing system.
	AccountId *int32 `protobuf:"zigzag32,1,req,name=account_id,json=accountId" json:"account_id,omitempty"`
	// One of the logon result codes.
	// This field is associated with ResultCode enum type.
	ResultCode *uint32 `protobuf:"varint,2,req,name=result_code,json=resultCode" json:"result_code,omitempty"`
	// Optional logon result message for failure details.
	TextMessage *common.Text `protobuf:"bytes,3,opt,name=text_message,json=textMessage" json:"text_message,omitempty"`
	// Time when the message was sent.
	ServerUtcTimestamp *timestamppb.Timestamp `protobuf:"bytes,4,req,name=server_utc_timestamp,json=serverUtcTimestamp" json:"server_utc_timestamp,omitempty"`
}

func (x *AccountLogonResult) Reset() {
	*x = AccountLogonResult{}
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountLogonResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLogonResult) ProtoMessage() {}

func (x *AccountLogonResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLogonResult.ProtoReflect.Descriptor instead.
func (*AccountLogonResult) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_account_authorization_2_proto_rawDescGZIP(), []int{1}
}

func (x *AccountLogonResult) GetAccountId() int32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *AccountLogonResult) GetResultCode() uint32 {
	if x != nil && x.ResultCode != nil {
		return *x.ResultCode
	}
	return 0
}

func (x *AccountLogonResult) GetTextMessage() *common.Text {
	if x != nil {
		return x.TextMessage
	}
	return nil
}

func (x *AccountLogonResult) GetServerUtcTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.ServerUtcTimestamp
	}
	return nil
}

// Account level password change request.
type AccountPasswordChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account ID in CQG trade routing system.
	AccountId *int32 `protobuf:"zigzag32,1,req,name=account_id,json=accountId" json:"account_id,omitempty"`
	// Currently used password.
	OldPassword *string `protobuf:"bytes,2,req,name=old_password,json=oldPassword" json:"old_password,omitempty"`
	// New password that user wants to use.
	NewPassword *string `protobuf:"bytes,3,req,name=new_password,json=newPassword" json:"new_password,omitempty"`
}

func (x *AccountPasswordChange) Reset() {
	*x = AccountPasswordChange{}
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountPasswordChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountPasswordChange) ProtoMessage() {}

func (x *AccountPasswordChange) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountPasswordChange.ProtoReflect.Descriptor instead.
func (*AccountPasswordChange) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_account_authorization_2_proto_rawDescGZIP(), []int{2}
}

func (x *AccountPasswordChange) GetAccountId() int32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *AccountPasswordChange) GetOldPassword() string {
	if x != nil && x.OldPassword != nil {
		return *x.OldPassword
	}
	return ""
}

func (x *AccountPasswordChange) GetNewPassword() string {
	if x != nil && x.NewPassword != nil {
		return *x.NewPassword
	}
	return ""
}

// Account level password change result.
type AccountPasswordChangeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account ID in CQG trade routing system.
	AccountId *int32 `protobuf:"zigzag32,1,req,name=account_id,json=accountId" json:"account_id,omitempty"`
	// This field is associated with ResultCode enum type.
	ResultCode *uint32 `protobuf:"varint,2,req,name=result_code,json=resultCode" json:"result_code,omitempty"`
	// Optional failure details.
	TextMessage *common.Text `protobuf:"bytes,3,opt,name=text_message,json=textMessage" json:"text_message,omitempty"`
}

func (x *AccountPasswordChangeResult) Reset() {
	*x = AccountPasswordChangeResult{}
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountPasswordChangeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountPasswordChangeResult) ProtoMessage() {}

func (x *AccountPasswordChangeResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountPasswordChangeResult.ProtoReflect.Descriptor instead.
func (*AccountPasswordChangeResult) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_account_authorization_2_proto_rawDescGZIP(), []int{3}
}

func (x *AccountPasswordChangeResult) GetAccountId() int32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *AccountPasswordChangeResult) GetResultCode() uint32 {
	if x != nil && x.ResultCode != nil {
		return *x.ResultCode
	}
	return 0
}

func (x *AccountPasswordChangeResult) GetTextMessage() *common.Text {
	if x != nil {
		return x.TextMessage
	}
	return nil
}

// Account level Logoff request.
type AccountLogoff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account ID in CQG trade routing system.
	AccountId *int32 `protobuf:"zigzag32,1,req,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (x *AccountLogoff) Reset() {
	*x = AccountLogoff{}
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountLogoff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLogoff) ProtoMessage() {}

func (x *AccountLogoff) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLogoff.ProtoReflect.Descriptor instead.
func (*AccountLogoff) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_account_authorization_2_proto_rawDescGZIP(), []int{4}
}

func (x *AccountLogoff) GetAccountId() int32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

// Account level Logoff result.
type AccountLogoffResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account ID in CQG trade routing system.
	AccountId *int32 `protobuf:"zigzag32,1,req,name=account_id,json=accountId" json:"account_id,omitempty"`
	// This field is associated with ResultCode enum type.
	ResultCode *uint32 `protobuf:"varint,2,req,name=result_code,json=resultCode" json:"result_code,omitempty"`
	// Optional failure description.
	TextMessage *common.Text `protobuf:"bytes,3,opt,name=text_message,json=textMessage" json:"text_message,omitempty"`
	// Time when the message was sent.
	ServerUtcTimestamp *timestamppb.Timestamp `protobuf:"bytes,4,req,name=server_utc_timestamp,json=serverUtcTimestamp" json:"server_utc_timestamp,omitempty"`
}

func (x *AccountLogoffResult) Reset() {
	*x = AccountLogoffResult{}
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountLogoffResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLogoffResult) ProtoMessage() {}

func (x *AccountLogoffResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLogoffResult.ProtoReflect.Descriptor instead.
func (*AccountLogoffResult) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_account_authorization_2_proto_rawDescGZIP(), []int{5}
}

func (x *AccountLogoffResult) GetAccountId() int32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *AccountLogoffResult) GetResultCode() uint32 {
	if x != nil && x.ResultCode != nil {
		return *x.ResultCode
	}
	return 0
}

func (x *AccountLogoffResult) GetTextMessage() *common.Text {
	if x != nil {
		return x.TextMessage
	}
	return nil
}

func (x *AccountLogoffResult) GetServerUtcTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.ServerUtcTimestamp
	}
	return nil
}

// Message for multi-step account level logon.
// Multi-step account level logon sequence has the following steps:
//  1. Client initiates logon negotiation by sending
//     AccountLogonRoutineClient.logon_init message to the server.
//  2. Server sends one or more AccountLogonRoutineServer.password_requests messages
//     (this step may repeat after step #3).
//  3. Client sends list of AccountLogonRoutineClient.password_responses back to the
//     server.
//  4. Server sends AccountLogonRoutineServer.logon_result as the final message of
//     the negotiation.
//
// Client may stop the negotiation by sending AccountLogonRoutineClient.abort_logon
// message in response to any server AccountLogonRoutineServer.password_requests
// message.
// NOTE: only one of logon_init, password_responses and abort_logon fields has to be
// specified.
type AccountLogonRoutineClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account ID in CQG trade routing system.
	// This is a required field.
	AccountId *int32 `protobuf:"zigzag32,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// Initiating of multi-step account level logon process by client.
	LogonInit *AccountLogonInit `protobuf:"bytes,2,opt,name=logon_init,json=logonInit" json:"logon_init,omitempty"`
	// List of passwords in response to request from server.
	// The number of passwords in response should be equal to the number of passwords in request from server.
	PasswordResponses []*PasswordResponse `protobuf:"bytes,3,rep,name=password_responses,json=passwordResponses" json:"password_responses,omitempty"`
	// Aborting of multi-step account level logon process by client.
	AbortLogon *AbortRoutine `protobuf:"bytes,4,opt,name=abort_logon,json=abortLogon" json:"abort_logon,omitempty"`
}

func (x *AccountLogonRoutineClient) Reset() {
	*x = AccountLogonRoutineClient{}
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountLogonRoutineClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLogonRoutineClient) ProtoMessage() {}

func (x *AccountLogonRoutineClient) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLogonRoutineClient.ProtoReflect.Descriptor instead.
func (*AccountLogonRoutineClient) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_account_authorization_2_proto_rawDescGZIP(), []int{6}
}

func (x *AccountLogonRoutineClient) GetAccountId() int32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *AccountLogonRoutineClient) GetLogonInit() *AccountLogonInit {
	if x != nil {
		return x.LogonInit
	}
	return nil
}

func (x *AccountLogonRoutineClient) GetPasswordResponses() []*PasswordResponse {
	if x != nil {
		return x.PasswordResponses
	}
	return nil
}

func (x *AccountLogonRoutineClient) GetAbortLogon() *AbortRoutine {
	if x != nil {
		return x.AbortLogon
	}
	return nil
}

// Initiating of account level multi-step logon process by client.
// Note: unlike user_session_2.LogonInit used for trader logon, we do not assume that
// user_name is required for account level logon. Where required, server will request it
// via AccountLogonRoutineServer.password_requests with password_type=PASSWORD_TYPE_TEXT
// and user_prompt_type=user_name.
type AccountLogonInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AccountLogonInit) Reset() {
	*x = AccountLogonInit{}
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountLogonInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLogonInit) ProtoMessage() {}

func (x *AccountLogonInit) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLogonInit.ProtoReflect.Descriptor instead.
func (*AccountLogonInit) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_account_authorization_2_proto_rawDescGZIP(), []int{7}
}

// Response to the AccountLogonRoutineClient message.
// Only one of logon_result and password_requests fields is specified.
// Note that most messages are shared with multi-step logon, though not all options may
// be available when used with multi-step account level logon.
type AccountLogonRoutineServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account ID in CQG trade routing system.
	// This is a required field.
	AccountId *int32 `protobuf:"zigzag32,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// Final message of the negotiation with the results.
	LogonResult *LogonResult `protobuf:"bytes,2,opt,name=logon_result,json=logonResult" json:"logon_result,omitempty"`
	// List of requested passwords.
	PasswordRequests []*PasswordRequest `protobuf:"bytes,3,rep,name=password_requests,json=passwordRequests" json:"password_requests,omitempty"`
}

func (x *AccountLogonRoutineServer) Reset() {
	*x = AccountLogonRoutineServer{}
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountLogonRoutineServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountLogonRoutineServer) ProtoMessage() {}

func (x *AccountLogonRoutineServer) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountLogonRoutineServer.ProtoReflect.Descriptor instead.
func (*AccountLogonRoutineServer) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_account_authorization_2_proto_rawDescGZIP(), []int{8}
}

func (x *AccountLogonRoutineServer) GetAccountId() int32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *AccountLogonRoutineServer) GetLogonResult() *LogonResult {
	if x != nil {
		return x.LogonResult
	}
	return nil
}

func (x *AccountLogonRoutineServer) GetPasswordRequests() []*PasswordRequest {
	if x != nil {
		return x.PasswordRequests
	}
	return nil
}

// Message for multi-step account level password change.
// Multi-step account level password change sequence has the following steps:
//  1. Client initiates account level password change procedure by sending
//     AccountPasswordChangeRoutineClient.init_password_change to the server.
//  2. Server sends one or more AccountPasswordChangeRoutineServer.password_requests
//     messages (this step may repeat after step #3).
//  3. Client sends list of AccountPasswordChangeRoutineClient.password_responses
//     back to the server.
//  4. Server sends AccountPasswordChangeRoutineServer.password_change_result
//     as the final message of the negotiation with the results.
//     Client may stop the negotiation by sending
//     AccountPasswordChangeRoutineClient.abort_password_change message in response
//     to any server AccountPasswordChangeRoutineServer.password_request message.
//
// NOTE: only one of init_password_change, password_responses and abort_password_change
// fields has to be specified.
type AccountPasswordChangeRoutineClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account ID in CQG trade routing system.
	// This is a required field.
	AccountId *int32 `protobuf:"zigzag32,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// True means user has decided to initiate password changing procedure.
	InitPasswordChange *bool `protobuf:"varint,2,opt,name=init_password_change,json=initPasswordChange" json:"init_password_change,omitempty"`
	// List of passwords in response to request from server.
	// The number of passwords in response should be equal to the number of passwords in request from server.
	PasswordResponses []*PasswordResponse `protobuf:"bytes,3,rep,name=password_responses,json=passwordResponses" json:"password_responses,omitempty"`
	// Aborting of multi-step password change process by client.
	AbortPasswordChange *AbortRoutine `protobuf:"bytes,4,opt,name=abort_password_change,json=abortPasswordChange" json:"abort_password_change,omitempty"`
}

func (x *AccountPasswordChangeRoutineClient) Reset() {
	*x = AccountPasswordChangeRoutineClient{}
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountPasswordChangeRoutineClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountPasswordChangeRoutineClient) ProtoMessage() {}

func (x *AccountPasswordChangeRoutineClient) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountPasswordChangeRoutineClient.ProtoReflect.Descriptor instead.
func (*AccountPasswordChangeRoutineClient) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_account_authorization_2_proto_rawDescGZIP(), []int{9}
}

func (x *AccountPasswordChangeRoutineClient) GetAccountId() int32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *AccountPasswordChangeRoutineClient) GetInitPasswordChange() bool {
	if x != nil && x.InitPasswordChange != nil {
		return *x.InitPasswordChange
	}
	return false
}

func (x *AccountPasswordChangeRoutineClient) GetPasswordResponses() []*PasswordResponse {
	if x != nil {
		return x.PasswordResponses
	}
	return nil
}

func (x *AccountPasswordChangeRoutineClient) GetAbortPasswordChange() *AbortRoutine {
	if x != nil {
		return x.AbortPasswordChange
	}
	return nil
}

// Response to the AccountPasswordChangeRoutineClient message.
// Only one of password_requests and password_change_result fields is specified.
// Note that most messages are shared with multi-step logon, though not all options may
// be available when used with multi-step account level logon.
type AccountPasswordChangeRoutineServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Account ID in CQG trade routing system.
	// This is a required field.
	AccountId *int32 `protobuf:"zigzag32,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	// List of requested passwords.
	PasswordRequests []*PasswordRequest `protobuf:"bytes,2,rep,name=password_requests,json=passwordRequests" json:"password_requests,omitempty"`
	// Final message of the negotiation with the results.
	PasswordChangeResult *PasswordChangeResult `protobuf:"bytes,3,opt,name=password_change_result,json=passwordChangeResult" json:"password_change_result,omitempty"`
}

func (x *AccountPasswordChangeRoutineServer) Reset() {
	*x = AccountPasswordChangeRoutineServer{}
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountPasswordChangeRoutineServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountPasswordChangeRoutineServer) ProtoMessage() {}

func (x *AccountPasswordChangeRoutineServer) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_account_authorization_2_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountPasswordChangeRoutineServer.ProtoReflect.Descriptor instead.
func (*AccountPasswordChangeRoutineServer) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_account_authorization_2_proto_rawDescGZIP(), []int{10}
}

func (x *AccountPasswordChangeRoutineServer) GetAccountId() int32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *AccountPasswordChangeRoutineServer) GetPasswordRequests() []*PasswordRequest {
	if x != nil {
		return x.PasswordRequests
	}
	return nil
}

func (x *AccountPasswordChangeRoutineServer) GetPasswordChangeResult() *PasswordChangeResult {
	if x != nil {
		return x.PasswordChangeResult
	}
	return nil
}

var File_protos_WebAPI_account_authorization_2_proto protoreflect.FileDescriptor

var file_protos_WebAPI_account_authorization_2_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x57, 0x65, 0x62, 0x41, 0x50, 0x49, 0x2f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x1a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x57,
	0x65, 0x62, 0x41, 0x50, 0x49, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x57, 0x65, 0x62, 0x41, 0x50, 0x49, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x65, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x11, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xe2, 0x02, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x11, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x31,
	0x0a, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x31, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x4c, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x74, 0x63, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x55, 0x74, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0x8a, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17,
	0x0a, 0x13, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x28, 0x0a, 0x24, 0x52, 0x45, 0x53, 0x55, 0x4c,
	0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x65, 0x22, 0x7c, 0x0a, 0x15,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x11, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x6e,
	0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xd0, 0x01, 0x0a, 0x1b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x11, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0a,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3e, 0x0a,
	0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x52,
	0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x65, 0x22, 0x2e, 0x0a,
	0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x66, 0x66, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x11, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x96, 0x02,
	0x0a, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x66, 0x66, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x11, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x5f, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0b, 0x74, 0x65, 0x78,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x75, 0x74, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x12, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x74, 0x63, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x3e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x17, 0x0a,
	0x13, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x55, 0x52, 0x45, 0x10, 0x65, 0x22, 0x94, 0x02, 0x0a, 0x19, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x32, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x49, 0x6e,
	0x69, 0x74, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x4f, 0x0a,
	0x12, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x11, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x3d,
	0x0a, 0x0b, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x65, 0x52, 0x0a, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x22, 0x12, 0x0a,
	0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x49, 0x6e, 0x69,
	0x74, 0x22, 0xc8, 0x01, 0x0a, 0x19, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x6f, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3e,
	0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4c,
	0x0a, 0x11, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x10, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x98, 0x02, 0x0a,
	0x22, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x12, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x32, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x11, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x15, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x52, 0x13, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0xed, 0x01, 0x0a, 0x22, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x4c, 0x0a,
	0x11, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x10, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x5a, 0x0a, 0x16, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x32, 0x2e, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x14, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x57, 0x65, 0x62, 0x41, 0x50, 0x49,
}

var (
	file_protos_WebAPI_account_authorization_2_proto_rawDescOnce sync.Once
	file_protos_WebAPI_account_authorization_2_proto_rawDescData = file_protos_WebAPI_account_authorization_2_proto_rawDesc
)

func file_protos_WebAPI_account_authorization_2_proto_rawDescGZIP() []byte {
	file_protos_WebAPI_account_authorization_2_proto_rawDescOnce.Do(func() {
		file_protos_WebAPI_account_authorization_2_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_WebAPI_account_authorization_2_proto_rawDescData)
	})
	return file_protos_WebAPI_account_authorization_2_proto_rawDescData
}

var file_protos_WebAPI_account_authorization_2_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_protos_WebAPI_account_authorization_2_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_protos_WebAPI_account_authorization_2_proto_goTypes = []any{
	(AccountLogonResult_ResultCode)(0),          // 0: account_authorization_2.AccountLogonResult.ResultCode
	(AccountPasswordChangeResult_ResultCode)(0), // 1: account_authorization_2.AccountPasswordChangeResult.ResultCode
	(AccountLogoffResult_ResultCode)(0),         // 2: account_authorization_2.AccountLogoffResult.ResultCode
	(*AccountLogon)(nil),                        // 3: account_authorization_2.AccountLogon
	(*AccountLogonResult)(nil),                  // 4: account_authorization_2.AccountLogonResult
	(*AccountPasswordChange)(nil),               // 5: account_authorization_2.AccountPasswordChange
	(*AccountPasswordChangeResult)(nil),         // 6: account_authorization_2.AccountPasswordChangeResult
	(*AccountLogoff)(nil),                       // 7: account_authorization_2.AccountLogoff
	(*AccountLogoffResult)(nil),                 // 8: account_authorization_2.AccountLogoffResult
	(*AccountLogonRoutineClient)(nil),           // 9: account_authorization_2.AccountLogonRoutineClient
	(*AccountLogonInit)(nil),                    // 10: account_authorization_2.AccountLogonInit
	(*AccountLogonRoutineServer)(nil),           // 11: account_authorization_2.AccountLogonRoutineServer
	(*AccountPasswordChangeRoutineClient)(nil),  // 12: account_authorization_2.AccountPasswordChangeRoutineClient
	(*AccountPasswordChangeRoutineServer)(nil),  // 13: account_authorization_2.AccountPasswordChangeRoutineServer
	(*common.Text)(nil),                         // 14: shared_1.Text
	(*timestamppb.Timestamp)(nil),               // 15: google.protobuf.Timestamp
	(*PasswordResponse)(nil),                    // 16: user_session_2.PasswordResponse
	(*AbortRoutine)(nil),                        // 17: user_session_2.AbortRoutine
	(*LogonResult)(nil),                         // 18: user_session_2.LogonResult
	(*PasswordRequest)(nil),                     // 19: user_session_2.PasswordRequest
	(*PasswordChangeResult)(nil),                // 20: user_session_2.PasswordChangeResult
}
var file_protos_WebAPI_account_authorization_2_proto_depIdxs = []int32{
	14, // 0: account_authorization_2.AccountLogonResult.text_message:type_name -> shared_1.Text
	15, // 1: account_authorization_2.AccountLogonResult.server_utc_timestamp:type_name -> google.protobuf.Timestamp
	14, // 2: account_authorization_2.AccountPasswordChangeResult.text_message:type_name -> shared_1.Text
	14, // 3: account_authorization_2.AccountLogoffResult.text_message:type_name -> shared_1.Text
	15, // 4: account_authorization_2.AccountLogoffResult.server_utc_timestamp:type_name -> google.protobuf.Timestamp
	10, // 5: account_authorization_2.AccountLogonRoutineClient.logon_init:type_name -> account_authorization_2.AccountLogonInit
	16, // 6: account_authorization_2.AccountLogonRoutineClient.password_responses:type_name -> user_session_2.PasswordResponse
	17, // 7: account_authorization_2.AccountLogonRoutineClient.abort_logon:type_name -> user_session_2.AbortRoutine
	18, // 8: account_authorization_2.AccountLogonRoutineServer.logon_result:type_name -> user_session_2.LogonResult
	19, // 9: account_authorization_2.AccountLogonRoutineServer.password_requests:type_name -> user_session_2.PasswordRequest
	16, // 10: account_authorization_2.AccountPasswordChangeRoutineClient.password_responses:type_name -> user_session_2.PasswordResponse
	17, // 11: account_authorization_2.AccountPasswordChangeRoutineClient.abort_password_change:type_name -> user_session_2.AbortRoutine
	19, // 12: account_authorization_2.AccountPasswordChangeRoutineServer.password_requests:type_name -> user_session_2.PasswordRequest
	20, // 13: account_authorization_2.AccountPasswordChangeRoutineServer.password_change_result:type_name -> user_session_2.PasswordChangeResult
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_protos_WebAPI_account_authorization_2_proto_init() }
func file_protos_WebAPI_account_authorization_2_proto_init() {
	if File_protos_WebAPI_account_authorization_2_proto != nil {
		return
	}
	file_protos_WebAPI_user_session_2_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_WebAPI_account_authorization_2_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_WebAPI_account_authorization_2_proto_goTypes,
		DependencyIndexes: file_protos_WebAPI_account_authorization_2_proto_depIdxs,
		EnumInfos:         file_protos_WebAPI_account_authorization_2_proto_enumTypes,
		MessageInfos:      file_protos_WebAPI_account_authorization_2_proto_msgTypes,
	}.Build()
	File_protos_WebAPI_account_authorization_2_proto = out.File
	file_protos_WebAPI_account_authorization_2_proto_rawDesc = nil
	file_protos_WebAPI_account_authorization_2_proto_goTypes = nil
	file_protos_WebAPI_account_authorization_2_proto_depIdxs = nil
}
