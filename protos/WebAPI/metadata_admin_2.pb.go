// Metadata administration messages

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: protos/WebAPI/metadata_admin_2.proto

package WebAPI

import (
	common "cqg-api/protos/WebAPI/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContributorParameterSource int32

const (
	ContributorParameterSource_CONTRIBUTOR_PARAMETER_SOURCE_UNSPECIFIED ContributorParameterSource = 0
	// Origin of a parameter is a contract.
	ContributorParameterSource_CONTRIBUTOR_PARAMETER_SOURCE_CONTRACT ContributorParameterSource = 1
	// Origin of a parameter is a security.
	ContributorParameterSource_CONTRIBUTOR_PARAMETER_SOURCE_SECURITY ContributorParameterSource = 2
)

// Enum value maps for ContributorParameterSource.
var (
	ContributorParameterSource_name = map[int32]string{
		0: "CONTRIBUTOR_PARAMETER_SOURCE_UNSPECIFIED",
		1: "CONTRIBUTOR_PARAMETER_SOURCE_CONTRACT",
		2: "CONTRIBUTOR_PARAMETER_SOURCE_SECURITY",
	}
	ContributorParameterSource_value = map[string]int32{
		"CONTRIBUTOR_PARAMETER_SOURCE_UNSPECIFIED": 0,
		"CONTRIBUTOR_PARAMETER_SOURCE_CONTRACT":    1,
		"CONTRIBUTOR_PARAMETER_SOURCE_SECURITY":    2,
	}
)

func (x ContributorParameterSource) Enum() *ContributorParameterSource {
	p := new(ContributorParameterSource)
	*p = x
	return p
}

func (x ContributorParameterSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContributorParameterSource) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_WebAPI_metadata_admin_2_proto_enumTypes[0].Descriptor()
}

func (ContributorParameterSource) Type() protoreflect.EnumType {
	return &file_protos_WebAPI_metadata_admin_2_proto_enumTypes[0]
}

func (x ContributorParameterSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ContributorParameterSource) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ContributorParameterSource(num)
	return nil
}

// Deprecated: Use ContributorParameterSource.Descriptor instead.
func (ContributorParameterSource) EnumDescriptor() ([]byte, []int) {
	return file_protos_WebAPI_metadata_admin_2_proto_rawDescGZIP(), []int{0}
}

type MetadataAdminResult_ResultCode int32

const (
	// / success codes (0 - 100)
	MetadataAdminResult_RESULT_CODE_SUCCESS MetadataAdminResult_ResultCode = 0
	// // failure codes (100+)
	// General failure.
	MetadataAdminResult_RESULT_CODE_FAILURE MetadataAdminResult_ResultCode = 101
	// The request rate limit has been violated.
	MetadataAdminResult_RESULT_CODE_REQUEST_RATE_LIMIT_VIOLATION MetadataAdminResult_ResultCode = 102
	// The request is timed out. No more statuses are expected for the request.
	// The modification request can be still in processing, and its result can
	// be observed later over subscriptions. E.g. PublishContract may lead to
	// SymbolListRequest update even after obtaining this status.
	MetadataAdminResult_RESULT_CODE_TIMEOUT MetadataAdminResult_ResultCode = 103
)

// Enum value maps for MetadataAdminResult_ResultCode.
var (
	MetadataAdminResult_ResultCode_name = map[int32]string{
		0:   "RESULT_CODE_SUCCESS",
		101: "RESULT_CODE_FAILURE",
		102: "RESULT_CODE_REQUEST_RATE_LIMIT_VIOLATION",
		103: "RESULT_CODE_TIMEOUT",
	}
	MetadataAdminResult_ResultCode_value = map[string]int32{
		"RESULT_CODE_SUCCESS":                      0,
		"RESULT_CODE_FAILURE":                      101,
		"RESULT_CODE_REQUEST_RATE_LIMIT_VIOLATION": 102,
		"RESULT_CODE_TIMEOUT":                      103,
	}
)

func (x MetadataAdminResult_ResultCode) Enum() *MetadataAdminResult_ResultCode {
	p := new(MetadataAdminResult_ResultCode)
	*p = x
	return p
}

func (x MetadataAdminResult_ResultCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetadataAdminResult_ResultCode) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_WebAPI_metadata_admin_2_proto_enumTypes[1].Descriptor()
}

func (MetadataAdminResult_ResultCode) Type() protoreflect.EnumType {
	return &file_protos_WebAPI_metadata_admin_2_proto_enumTypes[1]
}

func (x MetadataAdminResult_ResultCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MetadataAdminResult_ResultCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MetadataAdminResult_ResultCode(num)
	return nil
}

// Deprecated: Use MetadataAdminResult_ResultCode.Descriptor instead.
func (MetadataAdminResult_ResultCode) EnumDescriptor() ([]byte, []int) {
	return file_protos_WebAPI_metadata_admin_2_proto_rawDescGZIP(), []int{1, 0}
}

// Client meta-data messages.
// Only one metadata operation is allowed.
type MetadataAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Request identifier.
	RequestId *string `protobuf:"bytes,1,req,name=request_id,json=requestId" json:"request_id,omitempty"`
	// Request security parameters.
	GetSecurityParameters *GetSecurityParameters `protobuf:"bytes,2,opt,name=get_security_parameters,json=getSecurityParameters" json:"get_security_parameters,omitempty"`
	// Set security level parameters.
	SetSecurityParameters *SetSecurityParameters `protobuf:"bytes,3,opt,name=set_security_parameters,json=setSecurityParameters" json:"set_security_parameters,omitempty"`
	// Publish a new contract or publish changes of an existing contract.
	PublishContract *PublishContract `protobuf:"bytes,5,opt,name=publish_contract,json=publishContract" json:"publish_contract,omitempty"`
	// Remove a previous published contract from public access.
	UnpublishContract *UnpublishContract `protobuf:"bytes,6,opt,name=unpublish_contract,json=unpublishContract" json:"unpublish_contract,omitempty"`
	// Get contract level parameters.
	GetContractParameters *GetContractParameters `protobuf:"bytes,7,opt,name=get_contract_parameters,json=getContractParameters" json:"get_contract_parameters,omitempty"`
}

func (x *MetadataAdminRequest) Reset() {
	*x = MetadataAdminRequest{}
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataAdminRequest) ProtoMessage() {}

func (x *MetadataAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataAdminRequest.ProtoReflect.Descriptor instead.
func (*MetadataAdminRequest) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_metadata_admin_2_proto_rawDescGZIP(), []int{0}
}

func (x *MetadataAdminRequest) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *MetadataAdminRequest) GetGetSecurityParameters() *GetSecurityParameters {
	if x != nil {
		return x.GetSecurityParameters
	}
	return nil
}

func (x *MetadataAdminRequest) GetSetSecurityParameters() *SetSecurityParameters {
	if x != nil {
		return x.SetSecurityParameters
	}
	return nil
}

func (x *MetadataAdminRequest) GetPublishContract() *PublishContract {
	if x != nil {
		return x.PublishContract
	}
	return nil
}

func (x *MetadataAdminRequest) GetUnpublishContract() *UnpublishContract {
	if x != nil {
		return x.UnpublishContract
	}
	return nil
}

func (x *MetadataAdminRequest) GetGetContractParameters() *GetContractParameters {
	if x != nil {
		return x.GetContractParameters
	}
	return nil
}

// Server meta-data messages.
type MetadataAdminResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of a corresponding request or subscription.
	RequestId *string `protobuf:"bytes,1,req,name=request_id,json=requestId" json:"request_id,omitempty"`
	// Operation status.
	// This field is associated with ResultCode enum.
	ResultCode *uint32 `protobuf:"varint,2,req,name=result_code,json=resultCode" json:"result_code,omitempty"`
	// Operation details.
	Details *common.Text `protobuf:"bytes,3,opt,name=details" json:"details,omitempty"`
	// Result of security parameters request.
	GetSecurityParametersResult *GetSecurityParametersResult `protobuf:"bytes,4,opt,name=get_security_parameters_result,json=getSecurityParametersResult" json:"get_security_parameters_result,omitempty"`
	// Result of security parameters update.
	SetSecurityParametersResult *SetSecurityParametersResult `protobuf:"bytes,5,opt,name=set_security_parameters_result,json=setSecurityParametersResult" json:"set_security_parameters_result,omitempty"`
	// Result of contract publishing.
	PublishContractResult *PublishContractResult `protobuf:"bytes,6,opt,name=publish_contract_result,json=publishContractResult" json:"publish_contract_result,omitempty"`
	// Result of contract unpublishing.
	UnpublishContractResult *UnpublishContractResult `protobuf:"bytes,7,opt,name=unpublish_contract_result,json=unpublishContractResult" json:"unpublish_contract_result,omitempty"`
	// Result of contract parameters request.
	GetContractParametersResult *GetContractParametersResult `protobuf:"bytes,8,opt,name=get_contract_parameters_result,json=getContractParametersResult" json:"get_contract_parameters_result,omitempty"`
}

func (x *MetadataAdminResult) Reset() {
	*x = MetadataAdminResult{}
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataAdminResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataAdminResult) ProtoMessage() {}

func (x *MetadataAdminResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataAdminResult.ProtoReflect.Descriptor instead.
func (*MetadataAdminResult) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_metadata_admin_2_proto_rawDescGZIP(), []int{1}
}

func (x *MetadataAdminResult) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *MetadataAdminResult) GetResultCode() uint32 {
	if x != nil && x.ResultCode != nil {
		return *x.ResultCode
	}
	return 0
}

func (x *MetadataAdminResult) GetDetails() *common.Text {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *MetadataAdminResult) GetGetSecurityParametersResult() *GetSecurityParametersResult {
	if x != nil {
		return x.GetSecurityParametersResult
	}
	return nil
}

func (x *MetadataAdminResult) GetSetSecurityParametersResult() *SetSecurityParametersResult {
	if x != nil {
		return x.SetSecurityParametersResult
	}
	return nil
}

func (x *MetadataAdminResult) GetPublishContractResult() *PublishContractResult {
	if x != nil {
		return x.PublishContractResult
	}
	return nil
}

func (x *MetadataAdminResult) GetUnpublishContractResult() *UnpublishContractResult {
	if x != nil {
		return x.UnpublishContractResult
	}
	return nil
}

func (x *MetadataAdminResult) GetGetContractParametersResult() *GetContractParametersResult {
	if x != nil {
		return x.GetContractParametersResult
	}
	return nil
}

// Contributor with attached parameters.
type ContributorParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OTC Contributor identifiers.
	ContributorId *string `protobuf:"bytes,1,req,name=contributor_id,json=contributorId" json:"contributor_id,omitempty"`
	// List of custom parameters.
	Parameters []*ContributorParameter `protobuf:"bytes,2,rep,name=parameters" json:"parameters,omitempty"`
}

func (x *ContributorParameters) Reset() {
	*x = ContributorParameters{}
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContributorParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContributorParameters) ProtoMessage() {}

func (x *ContributorParameters) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContributorParameters.ProtoReflect.Descriptor instead.
func (*ContributorParameters) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_metadata_admin_2_proto_rawDescGZIP(), []int{2}
}

func (x *ContributorParameters) GetContributorId() string {
	if x != nil && x.ContributorId != nil {
		return *x.ContributorId
	}
	return ""
}

func (x *ContributorParameters) GetParameters() []*ContributorParameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type ContributorParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Contributor parameter name.
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// Contributor parameter value.
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	// An optional "deleted" flag for update operations.
	Deleted *bool `protobuf:"varint,3,opt,name=deleted" json:"deleted,omitempty"`
	// Contributor parameters are available on contract and security levels.
	// This field specifies where the value (see ContributorParameter.value
	// field) came from.
	// Contract source has a priority over security. Different requests
	// (which require different entitlements) control value on different
	// levels.
	// The field has meaning only in server to client messages.
	// This field is associated with ContributorParameterSource enum.
	Source *uint32 `protobuf:"varint,4,opt,name=source" json:"source,omitempty"`
}

func (x *ContributorParameter) Reset() {
	*x = ContributorParameter{}
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContributorParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContributorParameter) ProtoMessage() {}

func (x *ContributorParameter) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContributorParameter.ProtoReflect.Descriptor instead.
func (*ContributorParameter) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_metadata_admin_2_proto_rawDescGZIP(), []int{3}
}

func (x *ContributorParameter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ContributorParameter) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *ContributorParameter) GetDeleted() bool {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return false
}

func (x *ContributorParameter) GetSource() uint32 {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return 0
}

// Get security level parameters.
type GetSecurityParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Security identifier.
	SecurityId *string `protobuf:"bytes,1,req,name=security_id,json=securityId" json:"security_id,omitempty"`
	// OTC Contributor identifiers.
	ContributorIds []string `protobuf:"bytes,2,rep,name=contributor_ids,json=contributorIds" json:"contributor_ids,omitempty"`
}

func (x *GetSecurityParameters) Reset() {
	*x = GetSecurityParameters{}
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSecurityParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecurityParameters) ProtoMessage() {}

func (x *GetSecurityParameters) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecurityParameters.ProtoReflect.Descriptor instead.
func (*GetSecurityParameters) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_metadata_admin_2_proto_rawDescGZIP(), []int{4}
}

func (x *GetSecurityParameters) GetSecurityId() string {
	if x != nil && x.SecurityId != nil {
		return *x.SecurityId
	}
	return ""
}

func (x *GetSecurityParameters) GetContributorIds() []string {
	if x != nil {
		return x.ContributorIds
	}
	return nil
}

// Result of security parameters update.
type GetSecurityParametersResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Security identifier.
	SecurityId *string `protobuf:"bytes,1,req,name=security_id,json=securityId" json:"security_id,omitempty"`
	// Security custom parameters.
	ContributorParameters []*ContributorParameters `protobuf:"bytes,2,rep,name=contributor_parameters,json=contributorParameters" json:"contributor_parameters,omitempty"`
}

func (x *GetSecurityParametersResult) Reset() {
	*x = GetSecurityParametersResult{}
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSecurityParametersResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSecurityParametersResult) ProtoMessage() {}

func (x *GetSecurityParametersResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSecurityParametersResult.ProtoReflect.Descriptor instead.
func (*GetSecurityParametersResult) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_metadata_admin_2_proto_rawDescGZIP(), []int{5}
}

func (x *GetSecurityParametersResult) GetSecurityId() string {
	if x != nil && x.SecurityId != nil {
		return *x.SecurityId
	}
	return ""
}

func (x *GetSecurityParametersResult) GetContributorParameters() []*ContributorParameters {
	if x != nil {
		return x.ContributorParameters
	}
	return nil
}

// Set security level parameters.
type SetSecurityParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Security identifier.
	SecurityId *string `protobuf:"bytes,1,req,name=security_id,json=securityId" json:"security_id,omitempty"`
	// Security custom parameters.
	// Client includes only parameters that are changed (added, updated or deleted).
	ContributorParameters []*ContributorParameters `protobuf:"bytes,2,rep,name=contributor_parameters,json=contributorParameters" json:"contributor_parameters,omitempty"`
}

func (x *SetSecurityParameters) Reset() {
	*x = SetSecurityParameters{}
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSecurityParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSecurityParameters) ProtoMessage() {}

func (x *SetSecurityParameters) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSecurityParameters.ProtoReflect.Descriptor instead.
func (*SetSecurityParameters) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_metadata_admin_2_proto_rawDescGZIP(), []int{6}
}

func (x *SetSecurityParameters) GetSecurityId() string {
	if x != nil && x.SecurityId != nil {
		return *x.SecurityId
	}
	return ""
}

func (x *SetSecurityParameters) GetContributorParameters() []*ContributorParameters {
	if x != nil {
		return x.ContributorParameters
	}
	return nil
}

// Result of security parameters update.
type SetSecurityParametersResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Security identifier.
	SecurityId *string `protobuf:"bytes,1,req,name=security_id,json=securityId" json:"security_id,omitempty"`
	// Security custom parameters after the change.
	// The full list of parameters as a result of this update.
	ContributorParameters []*ContributorParameters `protobuf:"bytes,2,rep,name=contributor_parameters,json=contributorParameters" json:"contributor_parameters,omitempty"`
}

func (x *SetSecurityParametersResult) Reset() {
	*x = SetSecurityParametersResult{}
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetSecurityParametersResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSecurityParametersResult) ProtoMessage() {}

func (x *SetSecurityParametersResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSecurityParametersResult.ProtoReflect.Descriptor instead.
func (*SetSecurityParametersResult) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_metadata_admin_2_proto_rawDescGZIP(), []int{7}
}

func (x *SetSecurityParametersResult) GetSecurityId() string {
	if x != nil && x.SecurityId != nil {
		return *x.SecurityId
	}
	return ""
}

func (x *SetSecurityParametersResult) GetContributorParameters() []*ContributorParameters {
	if x != nil {
		return x.ContributorParameters
	}
	return nil
}

// Publish a new contract or publish changes of an existing contract.
// Modification is incremental - only specified fields are modified, if the
// field is not specified then it is not touched.
// Some fields cannot be modified.
type PublishContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Security identifier for which contract is created. Unmodifiable.
	SecurityId *string `protobuf:"bytes,1,opt,name=security_id,json=securityId" json:"security_id,omitempty"`
	// Contract trading date for derivatives
	// (local exchange date in time format, use date part only).
	LastTradingDate *int64 `protobuf:"zigzag64,3,opt,name=last_trading_date,json=lastTradingDate" json:"last_trading_date,omitempty"`
	// Source contract identifier for double-quoting.
	SourceContractId *uint32 `protobuf:"varint,4,opt,name=source_contract_id,json=sourceContractId" json:"source_contract_id,omitempty"`
	// Contract first notice date
	// (local exchange date in time format, use date part only).
	FirstNoticeDate *int64 `protobuf:"zigzag64,5,opt,name=first_notice_date,json=firstNoticeDate" json:"first_notice_date,omitempty"`
	// Contract last delivery date
	// (local exchange date in time format, use date part only).
	LastDeliveryDate *int64 `protobuf:"zigzag64,6,opt,name=last_delivery_date,json=lastDeliveryDate" json:"last_delivery_date,omitempty"`
	// Contract custom parameters.
	// Client includes all initial values.
	ContributorParameters []*ContributorParameters `protobuf:"bytes,7,rep,name=contributor_parameters,json=contributorParameters" json:"contributor_parameters,omitempty"`
	// Contract description.
	Description *string `protobuf:"bytes,8,opt,name=description" json:"description,omitempty"`
	// Publish a contract in preview mode. The contract will be visible only to
	// the current user, until it is published with the flag set to false or
	// omitted. Preview contracts do not persist between user sessions.
	Preview *bool `protobuf:"varint,9,opt,name=preview" json:"preview,omitempty"`
	// ID of the previously published contract.
	// Used for overriding contract parameters or final publishing.
	// Take the value from contract_id of previous PublishContractResult.
	// Note: Specifying this parameter leads to modification of the contract with
	// previous_contract_id. If the contract changes significantly (e.g. preview
	// flag changes), previous_contract_id may become invalid: notification about
	// the contract deletion will be sent if there is a subscription on the
	// contract, and a new contract id is returned in the response. In this case,
	// sending multiple requests with the same previous_contract_id before
	// getting a response will lead to the rejection of subsequent modifications.
	// It is recommended to send modifications one by one using the contract id
	// from the response of the last modification.
	PreviousContractId *uint32 `protobuf:"varint,10,opt,name=previous_contract_id,json=previousContractId" json:"previous_contract_id,omitempty"`
	// Identifier of the currency contract used for price conversion.
	// Contract should belong to security specified in SecurityMetadata.currency_rate_instrument_group_name.
	// Leave this field empty if SecurityMetadata.currency_rate_instrument_group_name is not set.
	CurrencyRateContractId *uint32 `protobuf:"varint,12,opt,name=currency_rate_contract_id,json=currencyRateContractId" json:"currency_rate_contract_id,omitempty"`
	// Identifier of the currency contract used for hedging conversion.
	// Contract should belong to security specified in SecurityMetadata.currency_hedge_instrument_group_name.
	// Leave this field empty if SecurityMetadata.currency_hedge_instrument_group_name is not set.
	CurrencyHedgeContractId *uint32 `protobuf:"varint,13,opt,name=currency_hedge_contract_id,json=currencyHedgeContractId" json:"currency_hedge_contract_id,omitempty"`
	// Identifier of the contract used for hedging.
	// Can be different from source contract only if 'HedgeFirst' contributor parameter is explicitly set to false.
	// If not set, it is assumed to be the same as source contract.
	HedgeWithContractId *uint32 `protobuf:"varint,14,opt,name=hedge_with_contract_id,json=hedgeWithContractId" json:"hedge_with_contract_id,omitempty"`
	// Identifiers of fields being cleared.
	// E.g. To clear first_notice_date field, put 5 in this collection.
	ClearedFields []uint32 `protobuf:"varint,11,rep,name=cleared_fields,json=clearedFields" json:"cleared_fields,omitempty"`
}

func (x *PublishContract) Reset() {
	*x = PublishContract{}
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishContract) ProtoMessage() {}

func (x *PublishContract) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishContract.ProtoReflect.Descriptor instead.
func (*PublishContract) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_metadata_admin_2_proto_rawDescGZIP(), []int{8}
}

func (x *PublishContract) GetSecurityId() string {
	if x != nil && x.SecurityId != nil {
		return *x.SecurityId
	}
	return ""
}

func (x *PublishContract) GetLastTradingDate() int64 {
	if x != nil && x.LastTradingDate != nil {
		return *x.LastTradingDate
	}
	return 0
}

func (x *PublishContract) GetSourceContractId() uint32 {
	if x != nil && x.SourceContractId != nil {
		return *x.SourceContractId
	}
	return 0
}

func (x *PublishContract) GetFirstNoticeDate() int64 {
	if x != nil && x.FirstNoticeDate != nil {
		return *x.FirstNoticeDate
	}
	return 0
}

func (x *PublishContract) GetLastDeliveryDate() int64 {
	if x != nil && x.LastDeliveryDate != nil {
		return *x.LastDeliveryDate
	}
	return 0
}

func (x *PublishContract) GetContributorParameters() []*ContributorParameters {
	if x != nil {
		return x.ContributorParameters
	}
	return nil
}

func (x *PublishContract) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *PublishContract) GetPreview() bool {
	if x != nil && x.Preview != nil {
		return *x.Preview
	}
	return false
}

func (x *PublishContract) GetPreviousContractId() uint32 {
	if x != nil && x.PreviousContractId != nil {
		return *x.PreviousContractId
	}
	return 0
}

func (x *PublishContract) GetCurrencyRateContractId() uint32 {
	if x != nil && x.CurrencyRateContractId != nil {
		return *x.CurrencyRateContractId
	}
	return 0
}

func (x *PublishContract) GetCurrencyHedgeContractId() uint32 {
	if x != nil && x.CurrencyHedgeContractId != nil {
		return *x.CurrencyHedgeContractId
	}
	return 0
}

func (x *PublishContract) GetHedgeWithContractId() uint32 {
	if x != nil && x.HedgeWithContractId != nil {
		return *x.HedgeWithContractId
	}
	return 0
}

func (x *PublishContract) GetClearedFields() []uint32 {
	if x != nil {
		return x.ClearedFields
	}
	return nil
}

// Result of contract publishing.
type PublishContractResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Assigned contract ID for the published contract if successful.
	// Complete meta-data can be requested by ContractMetadataRequest message.
	ContractId *uint32 `protobuf:"varint,1,opt,name=contract_id,json=contractId" json:"contract_id,omitempty"`
	// Symbol id for the published contract if successful.
	// Complete meta-data can be requested by SymbolRequest message.
	SymbolId *string `protobuf:"bytes,2,opt,name=symbol_id,json=symbolId" json:"symbol_id,omitempty"`
}

func (x *PublishContractResult) Reset() {
	*x = PublishContractResult{}
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishContractResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishContractResult) ProtoMessage() {}

func (x *PublishContractResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishContractResult.ProtoReflect.Descriptor instead.
func (*PublishContractResult) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_metadata_admin_2_proto_rawDescGZIP(), []int{9}
}

func (x *PublishContractResult) GetContractId() uint32 {
	if x != nil && x.ContractId != nil {
		return *x.ContractId
	}
	return 0
}

func (x *PublishContractResult) GetSymbolId() string {
	if x != nil && x.SymbolId != nil {
		return *x.SymbolId
	}
	return ""
}

// Remove previous published contract from public access.
type UnpublishContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Contract identifier.
	ContractId *uint32 `protobuf:"varint,1,opt,name=contract_id,json=contractId" json:"contract_id,omitempty"`
	// OTC Contributor identifiers which are affected by the action.
	// Note: Unused in current version.
	ContributorIds []string `protobuf:"bytes,2,rep,name=contributor_ids,json=contributorIds" json:"contributor_ids,omitempty"`
}

func (x *UnpublishContract) Reset() {
	*x = UnpublishContract{}
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpublishContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishContract) ProtoMessage() {}

func (x *UnpublishContract) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishContract.ProtoReflect.Descriptor instead.
func (*UnpublishContract) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_metadata_admin_2_proto_rawDescGZIP(), []int{10}
}

func (x *UnpublishContract) GetContractId() uint32 {
	if x != nil && x.ContractId != nil {
		return *x.ContractId
	}
	return 0
}

func (x *UnpublishContract) GetContributorIds() []string {
	if x != nil {
		return x.ContributorIds
	}
	return nil
}

// Result of contract unpublishing.
type UnpublishContractResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnpublishContractResult) Reset() {
	*x = UnpublishContractResult{}
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpublishContractResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishContractResult) ProtoMessage() {}

func (x *UnpublishContractResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishContractResult.ProtoReflect.Descriptor instead.
func (*UnpublishContractResult) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_metadata_admin_2_proto_rawDescGZIP(), []int{11}
}

// Get contract level parameters.
type GetContractParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Contract identifier.
	ContractId *uint32 `protobuf:"varint,1,req,name=contract_id,json=contractId" json:"contract_id,omitempty"`
	// OTC Contributor identifiers.
	ContributorIds []string `protobuf:"bytes,2,rep,name=contributor_ids,json=contributorIds" json:"contributor_ids,omitempty"`
}

func (x *GetContractParameters) Reset() {
	*x = GetContractParameters{}
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContractParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContractParameters) ProtoMessage() {}

func (x *GetContractParameters) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContractParameters.ProtoReflect.Descriptor instead.
func (*GetContractParameters) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_metadata_admin_2_proto_rawDescGZIP(), []int{12}
}

func (x *GetContractParameters) GetContractId() uint32 {
	if x != nil && x.ContractId != nil {
		return *x.ContractId
	}
	return 0
}

func (x *GetContractParameters) GetContributorIds() []string {
	if x != nil {
		return x.ContributorIds
	}
	return nil
}

// Result of contract parameters request.
type GetContractParametersResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Contract identifier.
	ContractId *uint32 `protobuf:"varint,1,req,name=contract_id,json=contractId" json:"contract_id,omitempty"`
	// Contract custom parameters.
	ContributorParameters []*ContributorParameters `protobuf:"bytes,2,rep,name=contributor_parameters,json=contributorParameters" json:"contributor_parameters,omitempty"`
}

func (x *GetContractParametersResult) Reset() {
	*x = GetContractParametersResult{}
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContractParametersResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContractParametersResult) ProtoMessage() {}

func (x *GetContractParametersResult) ProtoReflect() protoreflect.Message {
	mi := &file_protos_WebAPI_metadata_admin_2_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContractParametersResult.ProtoReflect.Descriptor instead.
func (*GetContractParametersResult) Descriptor() ([]byte, []int) {
	return file_protos_WebAPI_metadata_admin_2_proto_rawDescGZIP(), []int{13}
}

func (x *GetContractParametersResult) GetContractId() uint32 {
	if x != nil && x.ContractId != nil {
		return *x.ContractId
	}
	return 0
}

func (x *GetContractParametersResult) GetContributorParameters() []*ContributorParameters {
	if x != nil {
		return x.ContributorParameters
	}
	return nil
}

var File_protos_WebAPI_metadata_admin_2_proto protoreflect.FileDescriptor

var file_protos_WebAPI_metadata_admin_2_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x57, 0x65, 0x62, 0x41, 0x50, 0x49, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x32,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x32, 0x1a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x57, 0x65, 0x62, 0x41, 0x50, 0x49, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfa, 0x03,
	0x0a, 0x14, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x5f, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x15, 0x67, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x5f, 0x0a, 0x17, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x15, 0x73, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x4c, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x32, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x52, 0x0a, 0x12, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x32, 0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x11, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x5f, 0x0a, 0x17, 0x67, 0x65, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x15, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0xab, 0x06, 0x0a, 0x13, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x31, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x72, 0x0a, 0x1e,
	0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x1b, 0x67, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x72, 0x0a, 0x1e, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x1b, 0x73, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x5f, 0x0a, 0x17, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x32, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x15,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x65, 0x0a, 0x19, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x32, 0x2e, 0x55, 0x6e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x17, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x72, 0x0a, 0x1e,
	0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x1b, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x85, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x17, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x55,
	0x4c, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10,
	0x65, 0x12, 0x2c, 0x0a, 0x28, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x49,
	0x4d, 0x49, 0x54, 0x5f, 0x56, 0x49, 0x4f, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x66, 0x12,
	0x17, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54,
	0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x67, 0x22, 0x86, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x32,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x22, 0x72, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x61, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x5e, 0x0a, 0x16, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x32, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x15, 0x53, 0x65,
	0x74, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x5e, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x6f, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x15, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x5e, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x15,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0x8e, 0x05, 0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x10, 0x6c, 0x61,
	0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x5e,
	0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x32, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x19,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x16, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x5f, 0x68, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x48, 0x65, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x68, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x77, 0x69,
	0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x68, 0x65, 0x64, 0x67, 0x65, 0x57, 0x69, 0x74, 0x68, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x65,
	0x61, 0x72, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x55, 0x0a, 0x15, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0x5d, 0x0a,
	0x11, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x73, 0x22, 0x19, 0x0a, 0x17,
	0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x61, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x5e, 0x0a, 0x16, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x32, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2a, 0xa0, 0x01, 0x0a, 0x1a,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x28, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x4f, 0x52, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45,
	0x54, 0x45, 0x52, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x29, 0x0a, 0x25, 0x43, 0x4f, 0x4e, 0x54,
	0x52, 0x49, 0x42, 0x55, 0x54, 0x4f, 0x52, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45,
	0x52, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43,
	0x54, 0x10, 0x01, 0x12, 0x29, 0x0a, 0x25, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54,
	0x4f, 0x52, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x10, 0x02, 0x42, 0x11,
	0x5a, 0x0f, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x57, 0x65, 0x62, 0x41, 0x50,
	0x49,
}

var (
	file_protos_WebAPI_metadata_admin_2_proto_rawDescOnce sync.Once
	file_protos_WebAPI_metadata_admin_2_proto_rawDescData = file_protos_WebAPI_metadata_admin_2_proto_rawDesc
)

func file_protos_WebAPI_metadata_admin_2_proto_rawDescGZIP() []byte {
	file_protos_WebAPI_metadata_admin_2_proto_rawDescOnce.Do(func() {
		file_protos_WebAPI_metadata_admin_2_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_WebAPI_metadata_admin_2_proto_rawDescData)
	})
	return file_protos_WebAPI_metadata_admin_2_proto_rawDescData
}

var file_protos_WebAPI_metadata_admin_2_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protos_WebAPI_metadata_admin_2_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_protos_WebAPI_metadata_admin_2_proto_goTypes = []any{
	(ContributorParameterSource)(0),     // 0: metadata_admin_2.ContributorParameterSource
	(MetadataAdminResult_ResultCode)(0), // 1: metadata_admin_2.MetadataAdminResult.ResultCode
	(*MetadataAdminRequest)(nil),        // 2: metadata_admin_2.MetadataAdminRequest
	(*MetadataAdminResult)(nil),         // 3: metadata_admin_2.MetadataAdminResult
	(*ContributorParameters)(nil),       // 4: metadata_admin_2.ContributorParameters
	(*ContributorParameter)(nil),        // 5: metadata_admin_2.ContributorParameter
	(*GetSecurityParameters)(nil),       // 6: metadata_admin_2.GetSecurityParameters
	(*GetSecurityParametersResult)(nil), // 7: metadata_admin_2.GetSecurityParametersResult
	(*SetSecurityParameters)(nil),       // 8: metadata_admin_2.SetSecurityParameters
	(*SetSecurityParametersResult)(nil), // 9: metadata_admin_2.SetSecurityParametersResult
	(*PublishContract)(nil),             // 10: metadata_admin_2.PublishContract
	(*PublishContractResult)(nil),       // 11: metadata_admin_2.PublishContractResult
	(*UnpublishContract)(nil),           // 12: metadata_admin_2.UnpublishContract
	(*UnpublishContractResult)(nil),     // 13: metadata_admin_2.UnpublishContractResult
	(*GetContractParameters)(nil),       // 14: metadata_admin_2.GetContractParameters
	(*GetContractParametersResult)(nil), // 15: metadata_admin_2.GetContractParametersResult
	(*common.Text)(nil),                 // 16: shared_1.Text
}
var file_protos_WebAPI_metadata_admin_2_proto_depIdxs = []int32{
	6,  // 0: metadata_admin_2.MetadataAdminRequest.get_security_parameters:type_name -> metadata_admin_2.GetSecurityParameters
	8,  // 1: metadata_admin_2.MetadataAdminRequest.set_security_parameters:type_name -> metadata_admin_2.SetSecurityParameters
	10, // 2: metadata_admin_2.MetadataAdminRequest.publish_contract:type_name -> metadata_admin_2.PublishContract
	12, // 3: metadata_admin_2.MetadataAdminRequest.unpublish_contract:type_name -> metadata_admin_2.UnpublishContract
	14, // 4: metadata_admin_2.MetadataAdminRequest.get_contract_parameters:type_name -> metadata_admin_2.GetContractParameters
	16, // 5: metadata_admin_2.MetadataAdminResult.details:type_name -> shared_1.Text
	7,  // 6: metadata_admin_2.MetadataAdminResult.get_security_parameters_result:type_name -> metadata_admin_2.GetSecurityParametersResult
	9,  // 7: metadata_admin_2.MetadataAdminResult.set_security_parameters_result:type_name -> metadata_admin_2.SetSecurityParametersResult
	11, // 8: metadata_admin_2.MetadataAdminResult.publish_contract_result:type_name -> metadata_admin_2.PublishContractResult
	13, // 9: metadata_admin_2.MetadataAdminResult.unpublish_contract_result:type_name -> metadata_admin_2.UnpublishContractResult
	15, // 10: metadata_admin_2.MetadataAdminResult.get_contract_parameters_result:type_name -> metadata_admin_2.GetContractParametersResult
	5,  // 11: metadata_admin_2.ContributorParameters.parameters:type_name -> metadata_admin_2.ContributorParameter
	4,  // 12: metadata_admin_2.GetSecurityParametersResult.contributor_parameters:type_name -> metadata_admin_2.ContributorParameters
	4,  // 13: metadata_admin_2.SetSecurityParameters.contributor_parameters:type_name -> metadata_admin_2.ContributorParameters
	4,  // 14: metadata_admin_2.SetSecurityParametersResult.contributor_parameters:type_name -> metadata_admin_2.ContributorParameters
	4,  // 15: metadata_admin_2.PublishContract.contributor_parameters:type_name -> metadata_admin_2.ContributorParameters
	4,  // 16: metadata_admin_2.GetContractParametersResult.contributor_parameters:type_name -> metadata_admin_2.ContributorParameters
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_protos_WebAPI_metadata_admin_2_proto_init() }
func file_protos_WebAPI_metadata_admin_2_proto_init() {
	if File_protos_WebAPI_metadata_admin_2_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_WebAPI_metadata_admin_2_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_WebAPI_metadata_admin_2_proto_goTypes,
		DependencyIndexes: file_protos_WebAPI_metadata_admin_2_proto_depIdxs,
		EnumInfos:         file_protos_WebAPI_metadata_admin_2_proto_enumTypes,
		MessageInfos:      file_protos_WebAPI_metadata_admin_2_proto_msgTypes,
	}.Build()
	File_protos_WebAPI_metadata_admin_2_proto = out.File
	file_protos_WebAPI_metadata_admin_2_proto_rawDesc = nil
	file_protos_WebAPI_metadata_admin_2_proto_goTypes = nil
	file_protos_WebAPI_metadata_admin_2_proto_depIdxs = nil
}
